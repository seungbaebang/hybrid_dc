#ifndef SOL_FMM_H
#define SOL_FMM_H

#include <iostream>
#include <math.h> 

#include <Eigen/Core>
#include <Eigen/Dense>
#include <Eigen/Jacobi>
#include <Eigen/Sparse>

#include <igl/unique.h>
#include <igl/slice.h>
#include <igl/PI.h>
#include <igl/get_seconds.h>
#include <igl/slice_into.h>
#include <igl/slice.h>
#include <igl/setdiff.h>

// #include "Ik.h"
#include "expansion.h"
#include "compute_cell_list.h"
#include "query_cell.h"
#include "quadtree.h"
#include "../curve/bezier_curves.h"
#include "../curve/bezier_length.h"
#include "../util/edge_indices.h"
#include "../util/mat2d_to_compvec.h"
#include "../bem/green_line_integral.h"
#include "../biem/green_quadrature.h"
#include "../bem/singular_on_bnd.h"
#include "../biem/interpolate_density.h"
#include "../util/util.h"
#include "fmm.h"

typedef Eigen::Matrix<double,4,2> Mat42;

namespace infinite{


void local_resolve_curve(const int &num_expansion,
                  const Eigen::VectorXi &qI,
                  const Eigen::SparseMatrix<double> &VU,
                  const std::vector<std::vector<int > > &Q_PEI,
                  const std::vector<std::vector<int> > &levels,
                  const Eigen::MatrixXi &Q_CH,
                  const std::vector<std::vector<int> > &Q_adjs,
                  const std::vector<std::vector<int> > &Q_small_seps,
                  const std::vector<std::vector<int> > &Q_inters,
                  const std::vector<std::vector<int> > &Q_big_seps,
                  const std::vector<int> &leaf_cells,
                  const Eigen::VectorXi &newI,
                  const Eigen::VectorXi &new_pids,
                  const int &nb,
                  const int &ns,
                  const std::vector<VecXcd_list> &Ik_out_list_list,
                  const std::vector<VecXcd_list> &Ok_inter_list_list,
                  const MatXcd_list &Ik_child_list,
                  const std::vector<std::vector<VecXcd_list> > &Ok_inc_list_list,
                  const std::vector<RowVecXd_list> &G_list,
                  const std::vector<RowVecXd_list> &F_list,
                  const std::vector<VecXi_list> &nI_list,
                  const std::vector<VecXcd_list> &Ok_l3_list,
                  const VecXcd_list &Ik_inc_list,
                  Eigen::VectorXi &sol_qids,
                  std::vector<bool> &sol_pids_bool,
                  std::vector<bool> &con_pids_bool);

    void local_resolve_curve(const int &num_expansion,
                  const Eigen::VectorXi &qI,
                  const Eigen::SparseMatrix<double> &VU,
                  const std::vector<std::vector<int > > &Q_PEI,
                  const std::vector<std::vector<int> > &levels,
                  const Eigen::MatrixXi &Q_CH,
                  const std::vector<std::vector<int> > &Q_adjs,
                  const std::vector<std::vector<int> > &Q_small_seps,
                  const std::vector<std::vector<int> > &Q_inters,
                  const std::vector<std::vector<int> > &Q_big_seps,
                  const std::vector<int> &leaf_cells,
                  const Eigen::VectorXi &newI,
                  const Eigen::VectorXi &new_pids,
                  const Eigen::VectorXi &new_qids,
                  const int &nb,
                  const int &ns,
                  const std::vector<VecXcd_list> &Ik_out_list_list,
                  const std::vector<VecXcd_list> &Ok_inter_list_list,
                  const MatXcd_list &Ik_child_list,
                  const std::vector<std::vector<VecXcd_list> > &Ok_inc_list_list,
                  const std::vector<RowVecXd_list> &G_list,
                  const std::vector<RowVecXd_list> &F_list,
                  const std::vector<VecXi_list> &nI_list,
                  const std::vector<VecXcd_list> &Ok_l3_list,
                  const VecXcd_list &Ik_inc_list,
                  Eigen::VectorXi &solI,
                  Eigen::VectorXi &sol_qids,
                  std::vector<bool> &sol_pids_bool,
                  std::vector<bool> &con_pids_bool);




    bool fmm_gmres(const Eigen::VectorXd &rhs, 
               const int &restart,
               const double &tol,
               const int &maxIters,
               const int &num_expansion,
               const std::vector<int>& leaf_cells,
               const std::vector<std::vector<int > > &Q_PEI,
               const std::vector<std::vector<int> > &levels,
               const Eigen::MatrixXi &Q_CH,
               const std::vector<std::vector<int> > &Q_adjs,
               const std::vector<std::vector<int> > &Q_small_seps,
               const std::vector<std::vector<int> > &Q_big_seps,
               const std::vector<std::vector<int> > &Q_inters,
               const std::vector<RowVecXd_list> &G_list,
               const std::vector<VecXi_list> &nI_list,
               const std::vector<VecXcd_list> &Ok_l3_list,
               const VecXcd_list &Ik_inc_list,
               const std::vector<VecXcd_list> &Ik_out_list,
               const std::vector<VecXcd_list> &Ok_inter_list,
               const MatXcd_list &Ik_child_list,
               const std::vector<std::vector<VecXcd_list> > &Ok_inc_list,
               const Eigen::VectorXi &qI,
               const double &r0Norm,
               Eigen::VectorXd &x);


    bool fmm_gmres_hybrid(const Eigen::VectorXd &rhs, 
               const int &restart,
               const double &tol,
               const int &maxIters,
               const int &num_expansion,
               const std::vector<int>& leaf_cells,
               const std::vector<std::vector<int > > &Q_PEI,
               const std::vector<std::vector<int> > &levels,
               const Eigen::MatrixXi &Q_CH,
               const std::vector<std::vector<int> > &Q_adjs,
               const std::vector<std::vector<int> > &Q_small_seps,
               const std::vector<std::vector<int> > &Q_big_seps,
               const std::vector<std::vector<int> > &Q_inters,
               const std::vector<RowVecXd_list> &G_list,
               const std::vector<VecXi_list> &nI_list,
               const std::vector<VecXcd_list> &Ok_l3_list,
               const VecXcd_list &Ik_inc_list,
               const std::vector<VecXcd_list> &Ik_out_list,
               const std::vector<VecXcd_list> &Ok_inter_list,
               const MatXcd_list &Ik_child_list,
               const std::vector<std::vector<VecXcd_list> > &Ok_inc_list,
               const Eigen::VectorXi &qI,
               const Eigen::SparseMatrix<double> &VU,
               const double &r0Norm,
               Eigen::VectorXd &x,
               std::vector<Eigen::VectorXd> &x_list,
               std::vector<double> &err_list);


    bool fmm_gmres_hybrid(const Eigen::VectorXd &rhs, 
               const int &restart,
               const double &tol,
               const int &maxIters,
               const int &num_expansion,
               const std::vector<int>& leaf_cells,
               const std::vector<std::vector<int > > &Q_PEI,
               const std::vector<std::vector<int> > &levels,
               const Eigen::MatrixXi &Q_CH,
               const std::vector<std::vector<int> > &Q_adjs,
               const std::vector<std::vector<int> > &Q_small_seps,
               const std::vector<std::vector<int> > &Q_big_seps,
               const std::vector<std::vector<int> > &Q_inters,
               const std::vector<RowVecXd_list> &G_list,
               const std::vector<VecXi_list> &nI_list,
               const std::vector<VecXcd_list> &Ok_l3_list,
               const VecXcd_list &Ik_inc_list,
               const std::vector<VecXcd_list> &Ik_out_list,
               const std::vector<VecXcd_list> &Ok_inter_list,
               const MatXcd_list &Ik_child_list,
               const std::vector<std::vector<VecXcd_list> > &Ok_inc_list,
               const Eigen::VectorXi &qI,
               const Eigen::SparseMatrix<double> &VU,
               const double &r0Norm,
               Eigen::VectorXd &x);

    bool update_fmm_gmres_hybrid(const Eigen::VectorXd &rhs, 
               const int &restart,
               const double &tol,
               const int &maxIters,
               const int &num_expansion,
               const std::vector<int>& leaf_cells,
               const std::vector<std::vector<int > > &Q_PEI,
               const std::vector<std::vector<int> > &levels,
               const Eigen::MatrixXi &Q_CH,
               const std::vector<std::vector<int> > &Q_adjs,
               const std::vector<std::vector<int> > &Q_small_seps,
               const std::vector<std::vector<int> > &Q_big_seps,
               const std::vector<std::vector<int> > &Q_inters,
               const std::vector<RowVecXd_list> &G_list,
               const std::vector<VecXi_list> &nI_list,
               const std::vector<VecXcd_list> &Ok_l3_list,
               const VecXcd_list &Ik_inc_list,
               const std::vector<VecXcd_list> &Ik_out_list,
               const std::vector<VecXcd_list> &Ok_inter_list,
               const MatXcd_list &Ik_child_list,
               const std::vector<std::vector<VecXcd_list> > &Ok_inc_list,
               const Eigen::VectorXi &qI,
               const Eigen::SparseMatrix<double> &VU,
               const double &r0Norm,
               const std::vector<bool> &update_pids,
               const Eigen::VectorXi &sol_qids,
               Eigen::VectorXd &x);


void solve_fmm_gmres_hybrid(const Eigen::MatrixXd &b, 
                  const Eigen::VectorXd &b_norm,
                  const Eigen::MatrixXd &mu,
                  const int &restart,
                  const double &tol,
                  const int &maxIters,
                  const int &num_expansion,
                  const Eigen::VectorXi &qI,
                  const Eigen::SparseMatrix<double> &VU,
                  const Eigen::MatrixX2d &N,
                  const Eigen::VectorXd &L,
                  const Eigen::MatrixX2d &Q,
                  const VecXi_list &sing_id_list,
                  const VecXd_list &sing_t_list,
                  const std::vector<std::vector<int > > &Q_PEI,
                  const std::vector<std::vector<int > > &Q_QI,
                  const std::vector<std::vector<int> > &levels,
                  const RowVec2d_list_list &Q_LL,
                  const Mat2d_list_list &Q_PP,
                  const Eigen::MatrixXi &Q_CH,
                  const Eigen::VectorXi &Q_LV,
                  const Eigen::MatrixXd &Q_CN, 
                  const std::vector<std::vector<int> > &Q_adjs,
                  const std::vector<std::vector<int> > &Q_small_seps,
                  const std::vector<std::vector<int> > &Q_inters,
                  const std::vector<std::vector<int> > &Q_big_seps,
                  const std::vector<int> &leaf_cells,
                  std::vector<VecXcd_list> &Ik_out_list_list,
                  std::vector<VecXcd_list> &Ok_inter_list_list,
                  MatXcd_list &Ik_child_list,
                  std::vector<std::vector<VecXcd_list> > &Ok_inc_list_list,
                  VecXcd_list &lw_list,
                  std::vector<RowVecXd_list> &G_list,
                  std::vector<RowVecXd_list> &F_list,
                  std::vector<VecXi_list> &nI_list,
                  std::vector<VecXcd_list> &Ok_l3_list,
                  VecXcd_list &Ik_inc_list,
                  Eigen::MatrixXd &sigma,
                  std::vector<Eigen::MatrixXd> &sigma_list,
                  std::vector<Eigen::VectorXd> &err_list);


void solve_fmm_gmres_hybrid(const Eigen::MatrixXd &b, 
                const Eigen::VectorXd &b_norm,
                const Eigen::MatrixXd &mu,
                const int &restart,
                const double &tol,
                const int &maxIters,
                const int &num_expansion,
                const Eigen::VectorXi &qI,
                const Eigen::SparseMatrix<double> &VU,
                const Eigen::MatrixX2d &N,
                const Eigen::VectorXd &L,
                const Eigen::MatrixX2d &Q,
                const VecXi_list &sing_id_list,
                const VecXd_list &sing_t_list,
                const std::vector<std::vector<int > > &Q_PEI,
                const std::vector<std::vector<int > > &Q_QI,
                const std::vector<std::vector<int> > &levels,
                const RowVec2d_list_list &Q_LL,
                const Mat2d_list_list &Q_PP,
                const Eigen::MatrixXi &Q_CH,
                const Eigen::VectorXi &Q_LV,
                const Eigen::MatrixXd &Q_CN, 
                const std::vector<std::vector<int> > &Q_adjs,
                const std::vector<std::vector<int> > &Q_small_seps,
                const std::vector<std::vector<int> > &Q_inters,
                const std::vector<std::vector<int> > &Q_big_seps,
                const std::vector<int> &leaf_cells,
                std::vector<VecXcd_list> &Ik_out_list_list,
                std::vector<VecXcd_list> &Ok_inter_list_list,
                MatXcd_list &Ik_child_list,
                std::vector<std::vector<VecXcd_list> > &Ok_inc_list_list,
                VecXcd_list &lw_list,
                std::vector<RowVecXd_list> &G_list,
                std::vector<RowVecXd_list> &F_list,
                std::vector<VecXi_list> &nI_list,
                std::vector<VecXcd_list> &Ok_l3_list,
                VecXcd_list &Ik_inc_list,
                Eigen::MatrixXd &sigma);

void resolve_fmm_gmres_hybrid(const Eigen::MatrixXd &b, 
                  const Eigen::VectorXd &b_norm,
                  const Eigen::MatrixXd &mu,
                  const int &restart,
                  const double &tol,
                  const int &maxIters,
                  const int &num_expansion,
                  const Eigen::VectorXi &qI,
                  const Eigen::SparseMatrix<double> &VU,
                  const Eigen::MatrixX2d &N,
                  const Eigen::VectorXd &L,
                  const Eigen::MatrixX2d &Q,
                  const VecXi_list &sing_id_list,
                  const VecXd_list &sing_t_list,
                  const std::vector<std::vector<int > > &Q_PEI,
                  const std::vector<std::vector<int > > &Q_QI,
                  const std::vector<std::vector<int> > &levels,
                  const RowVec2d_list_list &Q_LL,
                  const Mat2d_list_list &Q_PP,
                  const Eigen::MatrixXi &Q_CH,
                  const Eigen::VectorXi &Q_LV,
                  const Eigen::MatrixXd &Q_CN, 
                  const std::vector<std::vector<int> > &Q_adjs,
                  const std::vector<std::vector<int> > &Q_small_seps,
                  const std::vector<std::vector<int> > &Q_inters,
                  const std::vector<std::vector<int> > &Q_big_seps,
                  const std::vector<std::vector<int> > &Q_inters_a,
                  const std::vector<int> &leaf_cells,
                  const Eigen::VectorXi &sub_cells,
                  const Eigen::VectorXi &new_cells,
                  const Eigen::VectorXi &newI,
                  const Eigen::VectorXi &new_pids,
                  const Eigen::VectorXi &sub_qids,
                  const Eigen::VectorXi &new_qids,
                  const Eigen::VectorXi &inI,
                  const std::vector<int> &update_leafs,
                  const std::vector<int> &update_big_seps,
                  const int &nb,
                  std::vector<VecXcd_list> &Ik_out_list_list,
                  std::vector<VecXcd_list> &Ok_inter_list_list,
                  MatXcd_list &Ik_child_list,
                  std::vector<std::vector<VecXcd_list> > &Ok_inc_list_list,
                  VecXcd_list &lw_list,
                  std::vector<RowVecXd_list> &G_list,
                  std::vector<RowVecXd_list> &F_list,
                  std::vector<VecXi_list> &nI_list,
                  std::vector<VecXcd_list> &Ok_l3_list,
                  VecXcd_list &Ik_inc_list,
                  Eigen::MatrixXd &sigma,
                  Eigen::VectorXi &solI);

void resolve_fmm_gmres_hybrid(const Eigen::MatrixXd &b, 
                  const Eigen::VectorXd &b_norm,
                  const Eigen::MatrixXd &mu,
                  const int &restart,
                  const double &tol,
                  const int &maxIters,
                  const int &num_expansion,
                  const Eigen::VectorXi &qI,
                  const Eigen::SparseMatrix<double> &VU,
                  const Eigen::MatrixX2d &N,
                  const Eigen::VectorXd &L,
                  const Eigen::MatrixX2d &Q,
                  const VecXi_list &sing_id_list,
                  const VecXd_list &sing_t_list,
                  const std::vector<std::vector<int > > &Q_PEI,
                  const std::vector<std::vector<int > > &Q_QI,
                  const std::vector<std::vector<int> > &levels,
                  const RowVec2d_list_list &Q_LL,
                  const Mat2d_list_list &Q_PP,
                  const Eigen::MatrixXi &Q_CH,
                  const Eigen::VectorXi &Q_LV,
                  const Eigen::MatrixXd &Q_CN, 
                  const std::vector<std::vector<int> > &Q_adjs,
                  const std::vector<std::vector<int> > &Q_small_seps,
                  const std::vector<std::vector<int> > &Q_inters,
                  const std::vector<std::vector<int> > &Q_big_seps,
                  const std::vector<std::vector<int> > &Q_inters_a,
                  const std::vector<int> &leaf_cells,
                  const Eigen::VectorXi &sub_cells,
                  const Eigen::VectorXi &new_cells,
                  const Eigen::VectorXi &newI,
                  const Eigen::VectorXi &new_pids,
                  const Eigen::VectorXi &sub_qids,
                  const Eigen::VectorXi &new_qids,
                  const std::vector<int> &update_leafs,
                  const std::vector<int> &update_big_seps,
                  const int &nb,
                  std::vector<VecXcd_list> &Ik_out_list_list,
                  std::vector<VecXcd_list> &Ok_inter_list_list,
                  MatXcd_list &Ik_child_list,
                  std::vector<std::vector<VecXcd_list> > &Ok_inc_list_list,
                  VecXcd_list &lw_list,
                  std::vector<RowVecXd_list> &G_list,
                  std::vector<RowVecXd_list> &F_list,
                  std::vector<VecXi_list> &nI_list,
                  std::vector<VecXcd_list> &Ok_l3_list,
                  VecXcd_list &Ik_inc_list,
                  Eigen::MatrixXd &sigma);

    void solve_fmm_gmres_bem(const Eigen::MatrixXd &b, 
                  const Eigen::VectorXd &b_norm,
                  const Eigen::MatrixXd &mu,
                  const int &restart,
                  const double &tol,
                  const int &maxIters,
                  const int &num_expansion,
                  const Eigen::VectorXi &qI,
                  const Eigen::MatrixX2d &N,
                  const Eigen::VectorXd &L,
                  const Eigen::MatrixX2d &Q,
                  const VecXi_list &sing_id_list,
                  const VecXd_list &sing_t_list,
                  const std::vector<std::vector<int > > &Q_PEI,
                  const std::vector<std::vector<int > > &Q_QI,
                  const std::vector<std::vector<int> > &levels,
                  const RowVec2d_list_list &Q_LL,
                  const Mat2d_list_list &Q_PP,
                  const Eigen::MatrixXi &Q_CH,
                  const Eigen::VectorXi &Q_LV,
                  const Eigen::MatrixXd &Q_CN, 
                  const std::vector<std::vector<int> > &Q_adjs,
                  const std::vector<std::vector<int> > &Q_small_seps,
                  const std::vector<std::vector<int> > &Q_inters,
                  const std::vector<std::vector<int> > &Q_big_seps,
                  const std::vector<int> &leaf_cells,
                  std::vector<VecXcd_list> &Ik_out_list_list,
                  std::vector<VecXcd_list> &Ok_inter_list_list,
                  MatXcd_list &Ik_child_list,
                  std::vector<std::vector<VecXcd_list> > &Ok_inc_list_list,
                  VecXcd_list &lw_list,
                  std::vector<RowVecXd_list> &G_list,
                  std::vector<RowVecXd_list> &F_list,
                  std::vector<VecXi_list> &nI_list,
                  std::vector<VecXcd_list> &Ok_l3_list,
                  VecXcd_list &Ik_inc_list,
                  Eigen::MatrixXd &sigma);


    void solve_fmm_gmres_bem(const Eigen::MatrixX2d &P,
                            const Eigen::MatrixX2i &E,
                            const Eigen::MatrixX2d &C,
                            const Eigen::MatrixX2d &N,
                            const Eigen::VectorXd &L,
                            const Eigen::MatrixXd &mu,
                            const Eigen::MatrixXd &b,
                            const VecXi_list &sing_id_list,
                            const VecXd_list &sing_t_list,
                            const int &num_expansion,
                            const int &min_pnt_num,
                            const int &max_depth,
                            const int &restart,
                            const double &tol,
                            const int &maxIters,
                            Eigen::MatrixXd &sigma);

void solve_fmm_gmres_hybrid(const Eigen::MatrixX2d &P,
                        const Eigen::MatrixX2i &E,
                        const Eigen::MatrixX2d &C,
                        const Eigen::MatrixX2d &N,
                        const Eigen::VectorXd &L,
                        const Eigen::MatrixX2d &Q,
                        const Eigen::MatrixXd &mu,
                        const Eigen::MatrixXd &b,
                        const VecXi_list &sing_id_list,
                        const VecXd_list &sing_t_list,
                        const Eigen::SparseMatrix<double> &VU,
                        const int &num_expansion,
                        const int &min_pnt_num,
                        const int &max_depth,
                        const int &restart,
                        const double &tol,
                        const int &maxIters,
                        Eigen::MatrixXd &sigma);

void solve_fmm_gmres_hybrid(const Eigen::MatrixX2d &P,
                  const Eigen::MatrixX2i &E,
                  const Eigen::MatrixX2d &C,
                  const Eigen::MatrixX2d &N,
                  const Eigen::VectorXd &L,
                  const Eigen::MatrixX2d &Q,
                  const Eigen::Matrix2d &minmaxQ,
                  const Eigen::MatrixXd &b, 
                  const Eigen::VectorXd &b_norm,
                  const Eigen::MatrixXd &mu,
                  const Eigen::VectorXd &xs,
                  const Eigen::VectorXd &xsc,
                  const Eigen::VectorXd &xg,
                  const int &num_expansion,
                  const int &min_pnt_num,
                  const int &max_depth,
                  const int &restart,
                  const double &tol,
                  const int &maxIters,
                  Eigen::VectorXi &qI,
                  std::vector<std::vector<int > > &Q_PI,
                  std::vector<std::vector<int > > &Q_PEI,
                  std::vector<std::vector<int > > &Q_QI,
                  RowVec2d_list_list &Q_LL,
                  Mat2d_list_list &Q_PP,
                  Eigen::VectorXi &Q_PA,
                  Eigen::MatrixXi &Q_CH,
                  Eigen::VectorXi &Q_LV,
                  Eigen::MatrixXd &Q_CN, 
                  Eigen::VectorXd &Q_W,
                  std::vector<std::vector<int> > &Q_adjs,
                  std::vector<std::vector<int> > &Q_small_seps,
                  std::vector<std::vector<int> > &Q_inters,
                  std::vector<std::vector<int> > &Q_big_seps,
                  std::vector<std::vector<int> > &Q_uni_adjs,
                  std::vector<int> &leaf_cells,
                  std::vector<VecXcd_list> &Ik_out_list_list,
                  std::vector<VecXcd_list> &Ok_inter_list_list,
                  MatXcd_list &Ik_child_list,
                  std::vector<std::vector<VecXcd_list> > &Ok_inc_list_list,
                  VecXcd_list &lw_list,
                  std::vector<RowVecXd_list> &G_list,
                  std::vector<RowVecXd_list> &F_list,
                  std::vector<VecXi_list> &nI_list,
                  std::vector<VecXcd_list> &Ok_l3_list,
                  VecXcd_list &Ik_inc_list,
                  Eigen::MatrixXd &sigma,
                  std::vector<Eigen::MatrixXd> &sigma_list,
                  std::vector<Eigen::VectorXd> &err_list);


void solve_fmm_gmres_hybrid(const Eigen::MatrixX2d &P,
                  const Eigen::MatrixX2i &E,
                  const Eigen::MatrixX2d &C,
                  const Eigen::MatrixX2d &N,
                  const Eigen::VectorXd &L,
                  const Eigen::MatrixX2d &Q,
                  const Eigen::Matrix2d &minmaxQ,
                  const Eigen::MatrixXd &b, 
                  const Eigen::VectorXd &b_norm,
                  const Eigen::MatrixXd &mu,
                  const Eigen::VectorXd &xs,
                  const Eigen::VectorXd &xsc,
                  const Eigen::VectorXd &xg,
                  const int &num_expansion,
                  const int &min_pnt_num,
                  const int &max_depth,
                  const int &restart,
                  const double &tol,
                  const int &maxIters,
                  Eigen::VectorXi &qI,
                  std::vector<std::vector<int > > &Q_PI,
                  std::vector<std::vector<int > > &Q_PEI,
                  std::vector<std::vector<int > > &Q_QI,
                  RowVec2d_list_list &Q_LL,
                  Mat2d_list_list &Q_PP,
                  Eigen::VectorXi &Q_PA,
                  Eigen::MatrixXi &Q_CH,
                  Eigen::VectorXi &Q_LV,
                  Eigen::MatrixXd &Q_CN, 
                  Eigen::VectorXd &Q_W,
                  std::vector<std::vector<int> > &Q_adjs,
                  std::vector<std::vector<int> > &Q_small_seps,
                  std::vector<std::vector<int> > &Q_inters,
                  std::vector<std::vector<int> > &Q_big_seps,
                  std::vector<std::vector<int> > &Q_uni_adjs,
                  std::vector<int> &leaf_cells,
                  std::vector<VecXcd_list> &Ik_out_list_list,
                  std::vector<VecXcd_list> &Ok_inter_list_list,
                  MatXcd_list &Ik_child_list,
                  std::vector<std::vector<VecXcd_list> > &Ok_inc_list_list,
                  VecXcd_list &lw_list,
                  std::vector<RowVecXd_list> &G_list,
                  std::vector<RowVecXd_list> &F_list,
                  std::vector<VecXi_list> &nI_list,
                  std::vector<VecXcd_list> &Ok_l3_list,
                  VecXcd_list &Ik_inc_list,
                  Eigen::MatrixXd &sigma);


void resolve_fmm_gmres_hybrid(const Eigen::MatrixX2d &P,
                  const Eigen::MatrixX2i &E,
                  const Eigen::MatrixX2d &C,
                  const Eigen::MatrixX2d &N,
                  const Eigen::VectorXd &L,
                  const Eigen::MatrixX2d &Q,
                  const Eigen::MatrixXd &b, 
                  const Eigen::VectorXd &b_norm,
                  const Eigen::MatrixXd &mu,
                  const Eigen::VectorXd &xs,
                  const Eigen::VectorXd &xsc,
                  const Eigen::VectorXd &xg,
                  const int &num_expansion,
                  const int &min_pnt_num,
                  const int &max_depth,
                  const int &restart,
                  const double &tol,
                  const int &maxIters,
                  const Eigen::VectorXi &cI,
                  const std::vector<std::vector<int> > &cEI,
                  const Eigen::VectorXi &subI,
                  const double &sub_t,
                  Eigen::VectorXi &qI,
                  std::vector<std::vector<int > > &Q_PI,
                  std::vector<std::vector<int > > &Q_PEI,
                  std::vector<std::vector<int > > &Q_QI,
                  RowVec2d_list_list &Q_LL,
                  Mat2d_list_list &Q_PP,
                  Eigen::VectorXi &Q_PA,
                  Eigen::MatrixXi &Q_CH,
                  Eigen::VectorXi &Q_LV,
                  Eigen::MatrixXd &Q_CN, 
                  Eigen::VectorXd &Q_W,
                  std::vector<std::vector<int> > &Q_adjs,
                  std::vector<std::vector<int> > &Q_small_seps,
                  std::vector<std::vector<int> > &Q_inters,
                  std::vector<std::vector<int> > &Q_big_seps,
                  std::vector<std::vector<int> > &Q_uni_adjs,
                  std::vector<int> &leaf_cells,
                  std::vector<VecXcd_list> &Ik_out_list_list,
                  std::vector<VecXcd_list> &Ok_inter_list_list,
                  MatXcd_list &Ik_child_list,
                  std::vector<std::vector<VecXcd_list> > &Ok_inc_list_list,
                  VecXcd_list &lw_list,
                  std::vector<RowVecXd_list> &G_list,
                  std::vector<RowVecXd_list> &F_list,
                  std::vector<VecXi_list> &nI_list,
                  std::vector<VecXcd_list> &Ok_l3_list,
                  VecXcd_list &Ik_inc_list,
                  Eigen::MatrixXd &sigma);



void resolve_fmm_gmres_hybrid_local(const Eigen::MatrixX2d &P,
                  const Eigen::MatrixX2i &E,
                  const Eigen::MatrixX2d &C,
                  const Eigen::MatrixX2d &N,
                  const Eigen::VectorXd &L,
                  const Eigen::MatrixX2d &Q,
                  const Eigen::MatrixXd &b, 
                  const Eigen::VectorXd &b_norm,
                  const Eigen::MatrixXd &mu,
                  const Eigen::VectorXd &xs,
                  const Eigen::VectorXd &xsc,
                  const Eigen::VectorXd &xg,
                  const int &num_expansion,
                  const int &min_pnt_num,
                  const int &max_depth,
                  const int &restart,
                  const double &tol,
                  const int &maxIters,
                  const Eigen::VectorXi &cI,
                  const std::vector<std::vector<int> > &cEI,
                  const Eigen::VectorXi &subI,
                  const Eigen::VectorXi &origI,
                  const double &sub_t,
                  const Eigen::Matrix2d &bndP,
                  Eigen::VectorXi &qI,
                  std::vector<std::vector<int > > &Q_PI,
                  std::vector<std::vector<int > > &Q_PEI,
                  std::vector<std::vector<int > > &Q_QI,
                  RowVec2d_list_list &Q_LL,
                  Mat2d_list_list &Q_PP,
                  Eigen::VectorXi &Q_PA,
                  Eigen::MatrixXi &Q_CH,
                  Eigen::VectorXi &Q_LV,
                  Eigen::MatrixXd &Q_CN, 
                  Eigen::VectorXd &Q_W,
                  std::vector<std::vector<int> > &Q_adjs,
                  std::vector<std::vector<int> > &Q_small_seps,
                  std::vector<std::vector<int> > &Q_inters,
                  std::vector<std::vector<int> > &Q_big_seps,
                  std::vector<std::vector<int> > &Q_uni_adjs,
                  std::vector<int> &leaf_cells,
                  std::vector<VecXcd_list> &Ik_out_list_list,
                  std::vector<VecXcd_list> &Ok_inter_list_list,
                  MatXcd_list &Ik_child_list,
                  std::vector<std::vector<VecXcd_list> > &Ok_inc_list_list,
                  VecXcd_list &lw_list,
                  std::vector<RowVecXd_list> &G_list,
                  std::vector<RowVecXd_list> &F_list,
                  std::vector<VecXi_list> &nI_list,
                  std::vector<VecXcd_list> &Ok_l3_list,
                  VecXcd_list &Ik_inc_list,
                  Eigen::MatrixXd &sigma,
                  Eigen::VectorXi &solI,
                  Eigen::VectorXi &newI);

void resolve_fmm_gmres_hybrid_local(const Eigen::MatrixX2d &P,
                  const Eigen::MatrixX2i &E,
                  const Eigen::MatrixX2d &C,
                  const Eigen::MatrixX2d &N,
                  const Eigen::VectorXd &L,
                  const Eigen::MatrixX2d &Q,
                  const Eigen::MatrixXd &b, 
                  const Eigen::VectorXd &b_norm,
                  const Eigen::MatrixXd &mu,
                  const Eigen::VectorXd &xs,
                  const Eigen::VectorXd &xsc,
                  const Eigen::VectorXd &xg,
                  const int &num_expansion,
                  const int &min_pnt_num,
                  const int &max_depth,
                  const int &restart,
                  const double &tol,
                  const int &maxIters,
                  const Eigen::VectorXi &cI,
                  const std::vector<std::vector<int> > &cEI,
                  const Eigen::VectorXi &subI,
                  const Eigen::VectorXi &origI,
                  const double &sub_t,
                  const Eigen::Matrix2d &bndP,
                  Eigen::VectorXi &qI,
                  std::vector<std::vector<int > > &Q_PI,
                  std::vector<std::vector<int > > &Q_PEI,
                  std::vector<std::vector<int > > &Q_QI,
                  RowVec2d_list_list &Q_LL,
                  Mat2d_list_list &Q_PP,
                  Eigen::VectorXi &Q_PA,
                  Eigen::MatrixXi &Q_CH,
                  Eigen::VectorXi &Q_LV,
                  Eigen::MatrixXd &Q_CN, 
                  Eigen::VectorXd &Q_W,
                  std::vector<std::vector<int> > &Q_adjs,
                  std::vector<std::vector<int> > &Q_small_seps,
                  std::vector<std::vector<int> > &Q_inters,
                  std::vector<std::vector<int> > &Q_big_seps,
                  std::vector<std::vector<int> > &Q_uni_adjs,
                  std::vector<int> &leaf_cells,
                  std::vector<VecXcd_list> &Ik_out_list_list,
                  std::vector<VecXcd_list> &Ok_inter_list_list,
                  MatXcd_list &Ik_child_list,
                  std::vector<std::vector<VecXcd_list> > &Ok_inc_list_list,
                  VecXcd_list &lw_list,
                  std::vector<RowVecXd_list> &G_list,
                  std::vector<RowVecXd_list> &F_list,
                  std::vector<VecXi_list> &nI_list,
                  std::vector<VecXcd_list> &Ok_l3_list,
                  VecXcd_list &Ik_inc_list,
                  Eigen::MatrixXd &sigma);
}
#endif